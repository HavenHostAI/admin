---
alwaysApply: true
description: Always use ESM (ECMAScript Modules) syntax
---

# ESM Module Usage

Always use ESM (ECMAScript Modules) syntax for imports and exports in this project.

## Guidelines

- **Use `import` statements** instead of `require()`
- **Use `export` statements** instead of `module.exports`
- **Use `export default`** for default exports
- **Use named exports** with `export { }` syntax
- **Use dynamic imports** with `import()` when needed for code splitting

## Examples

### Correct ESM Syntax

```javascript
// Import statements
import React from "react";
import { useState, useEffect } from "react";
import * as utils from "./utils";
import { Button } from "./components/ui/button";

// Export statements
export const myFunction = () => {};
export default MyComponent;
export { Button, Input, Card };
```

### Avoid CommonJS

```javascript
// ❌ Don't use CommonJS
const React = require("react");
const { useState } = require("react");
module.exports = MyComponent;
exports.myFunction = () => {};
```

## File Extensions

- Use `.js` or `.ts` files with ESM syntax
- Ensure `package.json` has `"type": "module"` if using `.js` files
- TypeScript files (`.ts`, `.tsx`) should use ESM syntax by default

## Dynamic Imports

Use dynamic imports for code splitting and lazy loading:

```javascript
const LazyComponent = lazy(() => import("./LazyComponent"));
const module = await import("./some-module");
```
